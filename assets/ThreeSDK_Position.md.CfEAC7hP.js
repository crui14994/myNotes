import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.BgId8OS5.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ThreeSDK/Position.md","filePath":"ThreeSDK/Position.md","lastUpdated":1750310875000}'),h={name:"ThreeSDK/Position.md"};function e(l,s,k,p,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h4 id="坐标相关" tabindex="-1">坐标相关 <a class="header-anchor" href="#坐标相关" aria-label="Permalink to &quot;坐标相关&quot;">​</a></h4><h4 id="getcameraposition-获取当前相机位置和朝向" tabindex="-1">getCameraPosition 获取当前相机位置和朝向 <a class="header-anchor" href="#getcameraposition-获取当前相机位置和朝向" aria-label="Permalink to &quot;getCameraPosition 获取当前相机位置和朝向&quot;">​</a></h4><ul><li>@returns</li></ul><table tabindex="0"><thead><tr><th>返回值</th><th>type</th><th>描述</th></tr></thead><tbody><tr><td>CameraPosition</td><td>Object</td><td>包含相机的位置坐标（x, y, z）和朝向向量（direction）</td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> CameraPosition</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> MT</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Position</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">getCameraPosition</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">CameraPosition</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="getcenterofobject-获取对象的中心点坐标" tabindex="-1">getCenterOfObject 获取对象的中心点坐标 <a class="header-anchor" href="#getcenterofobject-获取对象的中心点坐标" aria-label="Permalink to &quot;getCenterOfObject 获取对象的中心点坐标&quot;">​</a></h4><ul><li>@param</li></ul><table tabindex="0"><thead><tr><th>参数名</th><th>type</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>Object3D</td><td>Object</td><td>要计算中心点的 3D 对象</td><td>-</td></tr><tr><td>isMatrixWorld</td><td>Boolean</td><td>是否基于基于世界坐标系获取中心点</td><td>false</td></tr></tbody></table><ul><li>@returns</li></ul><table tabindex="0"><thead><tr><th>返回值</th><th>type</th><th>描述</th></tr></thead><tbody><tr><td>center</td><td>Object</td><td>返回中心点的 Vector3 坐标</td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> center</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;"> getCenterOfObject</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">mesh</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// mesh 是你的模型对象</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&quot;中心点:&quot;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">center</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="setprojection-配置利用d3将地理坐标转换为三维向量的参数-并返回projection方法供坐标转换使用" tabindex="-1">setProjection 配置利用d3将地理坐标转换为三维向量的参数，并返回projection方法供坐标转换使用 <a class="header-anchor" href="#setprojection-配置利用d3将地理坐标转换为三维向量的参数-并返回projection方法供坐标转换使用" aria-label="Permalink to &quot;setProjection 配置利用d3将地理坐标转换为三维向量的参数，并返回projection方法供坐标转换使用&quot;">​</a></h4><ul><li>@param</li></ul><table tabindex="0"><thead><tr><th>参数名</th><th>type</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>center</td><td>Array</td><td>投影中心点的经纬度坐标</td><td>[105.16353, 31.635225]</td></tr><tr><td>scale</td><td>Number</td><td>投影的缩放比例</td><td>1</td></tr><tr><td>translate</td><td>Array</td><td>平移量</td><td>[0, 0]</td></tr></tbody></table><ul><li>@returns</li></ul><table tabindex="0"><thead><tr><th>返回值</th><th>type</th><th>描述</th></tr></thead><tbody><tr><td>projection</td><td>function</td><td>转换函数</td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> projection</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> MT</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Position</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">setProjection</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">105.16353</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">31.635225</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">projection</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="coordinatetransformation-经纬度坐标转为三维向量" tabindex="-1">coordinateTransformation 经纬度坐标转为三维向量 <a class="header-anchor" href="#coordinatetransformation-经纬度坐标转为三维向量" aria-label="Permalink to &quot;coordinateTransformation 经纬度坐标转为三维向量&quot;">​</a></h4><ul><li>@param</li></ul><table tabindex="0"><thead><tr><th>参数名</th><th>type</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>coordinate</td><td>Array</td><td>经纬度坐标数组</td><td>-</td></tr></tbody></table><ul><li>@returns</li></ul><table tabindex="0"><thead><tr><th>返回值</th><th>type</th><th>描述</th></tr></thead><tbody><tr><td>coordinate</td><td>Object</td><td>转换得到的坐标数组</td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;"> projection</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">105.16353</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">31.635225</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">projection</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="resetgeometryuv-重置几何体的uv映射" tabindex="-1">resetGeometryUV 重置几何体的UV映射 <a class="header-anchor" href="#resetgeometryuv-重置几何体的uv映射" aria-label="Permalink to &quot;resetGeometryUV 重置几何体的UV映射&quot;">​</a></h4><p>当使用 ShapeGeometry 创建不规则的图形时,geometry.attributes.uv 里面的 UV 坐标实际上是不对的；</p><p>此函数根据几何体的边界框计算UV坐标，以确保纹理正确映射到整个几何体表面.</p><ul><li>@param</li></ul><table tabindex="0"><thead><tr><th>参数名</th><th>type</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>geometry</td><td>Object</td><td>三维几何体的对象，包含位置和UV属性</td><td>-</td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#859900;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> shape</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">Shape</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#859900;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> extrudeSettings</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  depth: </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  bevelEnabled: </span><span style="--shiki-light:#B58900;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  bevelSegments: </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  bevelThickness: </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> geometry</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">ExtrudeGeometry</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">shape</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">extrudeSettings</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">geometry</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//重新定义uv坐标</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">MT</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Position</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">resetGeometryUV</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">geometry</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> texture</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">TextureLoader</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;/data/img/china.png&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">texture</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">wrapS</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">RepeatWrapping</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">texture</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">wrapT</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">RepeatWrapping</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">texture</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">repeat</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> mesh</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">Mesh</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">geometry</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">material</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">scene</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">mesh</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,29)]))}const o=i(h,[["render",e]]);export{g as __pageData,o as default};
