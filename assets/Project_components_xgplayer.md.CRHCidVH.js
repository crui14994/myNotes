import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DhH5gtWF.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Project/components/xgplayer.md","filePath":"Project/components/xgplayer.md","lastUpdated":1750302121000}'),t={name:"Project/components/xgplayer.md"};function e(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<p>xgplayer 组件使用</p><h3 id="安装-xgplayer" tabindex="-1">安装 xgplayer <a class="header-anchor" href="#安装-xgplayer" aria-label="Permalink to &quot;安装 xgplayer&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">npm</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> xgplayer</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">npm</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> xgplayer</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">flv</span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> //flv流播放</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">npm</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> xgplayer</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">hls</span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> //hls流播放</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">npm</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> webm</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">duration</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">fix</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">  //用于录制视频的时候补全修复视频时长元数据</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="引入组件" tabindex="-1">引入组件 <a class="header-anchor" href="#引入组件" aria-label="Permalink to &quot;引入组件&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#859900;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> Player</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;"> &#39;@/BaseComponents/Player/index.vue&#39;</span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> //设备列表 + 视频播放</span></span>
<span class="line"><span style="--shiki-light:#859900;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> Player</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;"> &#39;@/BaseComponents/Player/xgPlayer/index.vue&#39;</span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> //单视频播放</span></span>
<span class="line"><span style="--shiki-light:#859900;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> multiPlayer</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;"> &#39;@/BaseComponents/Player/xgPlayer/multiPlayer.vue&#39;</span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> //多视频播放</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="组件使用" tabindex="-1">组件使用 <a class="header-anchor" href="#组件使用" aria-label="Permalink to &quot;组件使用&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#859900;--shiki-dark:#79B8FF;">Player</span><span style="--shiki-light:#93A1A1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;player&#39;</span><span style="--shiki-light:#93A1A1;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#859900;--shiki-dark:#79B8FF;">Player</span><span style="--shiki-light:#93A1A1;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#859900;--shiki-dark:#79B8FF;">multiPlayer</span><span style="--shiki-light:#93A1A1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;multiPlayer&#39;</span><span style="--shiki-light:#93A1A1;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#859900;--shiki-dark:#79B8FF;">multiPlayer</span><span style="--shiki-light:#93A1A1;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//调用组件的playerVideo事件</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> player</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">ref</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">player</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> player</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">playerVideo</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">    url:</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">视频地址</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">    deviceId:</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">设备ID</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">    qualityNum:</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">默认清晰度</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">    replayTime:</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">回放时间范围</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,（回放时传参）,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">    playerBack:</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">是否开启倍数播放</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="属性配置" tabindex="-1">属性配置 <a class="header-anchor" href="#属性配置" aria-label="Permalink to &quot;属性配置&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>说明</th><th>值类型</th><th>默认值</th><th>适用组件</th></tr></thead><tbody><tr><td>holderShow</td><td>是否开启云台控制功能</td><td>boolean</td><td>true</td><td>全部</td></tr><tr><td>multiNum</td><td>默认分屏数量</td><td>string:number</td><td>4</td><td>全部</td></tr><tr><td>recordShow</td><td>是否开启录像功能</td><td>boolean</td><td>true</td><td>全部</td></tr><tr><td>articulationShow</td><td>是否开启清晰度切换功能</td><td>boolean</td><td>true</td><td>全部</td></tr><tr><td>definitionArr</td><td>清晰度配置</td><td>array</td><td>[{ name: &#39;高清&#39;, value: 0 },{ name: &#39;标清&#39;, value: 1 },{ name: &#39;流畅&#39;, value: 2 },]</td><td>全部</td></tr><tr><td>screenShotShow</td><td>是否开启截图功能</td><td>boolean</td><td>true</td><td>全部</td></tr><tr><td>leftTitle</td><td>设备列表tab栏标题</td><td>string:number</td><td>&#39;设备列表&#39;</td><td>设备列表存在</td></tr><tr><td>rightTitle</td><td>设备列表tab栏标题</td><td>string:number</td><td>&#39;设备分组&#39;</td><td>设备列表存在</td></tr><tr><td>whetherToCustomizeData</td><td>设备列表是否自定义数据</td><td>boolean</td><td>false</td><td>设备列表存在</td></tr><tr><td>leftData</td><td>设备列表tab1数据</td><td>array</td><td>[]</td><td>开启自定义设备数据</td></tr><tr><td>rightData</td><td>设备列表tab2数据</td><td>array</td><td>[]</td><td>开启自定义设备数据</td></tr><tr><td>addBtn</td><td>开启添加组</td><td>boolean</td><td>true</td><td>设备列表存在</td></tr><tr><td>topTab</td><td>开启tab栏展示</td><td>boolean</td><td>true</td><td>设备列表存在</td></tr><tr><td>botBtn</td><td>轮巡播放按钮</td><td>boolean</td><td>true</td><td>设备列表存在</td></tr></tbody></table><h3 id="自定义插件编写-更改插件使用" tabindex="-1">自定义插件编写(更改插件使用) <a class="header-anchor" href="#自定义插件编写-更改插件使用" aria-label="Permalink to &quot;自定义插件编写(更改插件使用)&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import { Plugin } from &#39;xgplayer&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const { POSITIONS } = Plugin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// demoPlugin.js</span></span>
<span class="line"><span>export default class demoPlugin extends Plugin {</span></span>
<span class="line"><span>  // 插件的名称，将作为插件实例的唯一key值</span></span>
<span class="line"><span>  static get pluginName() {</span></span>
<span class="line"><span>    return &#39;demoPlugin&#39;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  static get defaultConfig () {</span></span>
<span class="line"><span>      return {</span></span>
<span class="line"><span>        // 挂载在controls的右侧，如果不指定则默认挂载在播放器根节点上</span></span>
<span class="line"><span>        position: POSITIONS.CONTROLS_RIGHT</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  constructor (args) {</span></span>
<span class="line"><span>    super(args)</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  beforePlayerInit () {</span></span>
<span class="line"><span>   // TODO 播放器调用start初始化播放源之前的逻辑</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  afterPlayerInit () {</span></span>
<span class="line"><span>    // TODO 播放器调用start初始化播放源之后的逻辑</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  afterCreate () {</span></span>
<span class="line"><span>    this.icon = this.find(&#39;.icon&#39;)</span></span>
<span class="line"><span>    this.onIconClick = (e) =&gt; {</span></span>
<span class="line"><span>      console.log(&#39;class为icon元素点击回调&#39;)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    this.onClick = () =&gt; {</span></span>
<span class="line"><span>      console.log(&#39;当前插件根节点点击事件&#39;)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    // 对当前插件根节点内部类名为.icon的元素绑定click事件</span></span>
<span class="line"><span>    this.bind(&#39;.icon&#39;, &#39;click&#39;, this.onIconClick)</span></span>
<span class="line"><span>    // 对当前插件根节点绑定click事件</span></span>
<span class="line"><span>    this.bind(&#39;click&#39;, this.onClick)</span></span>
<span class="line"><span>    //TODO 插件实例化之后的一些逻辑</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  destroy () {</span></span>
<span class="line"><span>    this.unbind(&#39;.icon&#39;, &#39;click&#39;, this.onIconClick)</span></span>
<span class="line"><span>    this.unbind(&#39;click&#39;, this.onClick)</span></span>
<span class="line"><span>    this.icon = null</span></span>
<span class="line"><span>    // 播放器销毁的时候一些逻辑</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  render () {</span></span>
<span class="line"><span>    return \`&lt;div class=&quot;demo-plugin&quot;&gt;这是一个dmeo插件&lt;div class=&quot;icon&quot;&gt;&lt;/div&gt;&lt;/div&gt;\`</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h3 id="自定义插件生命周期" tabindex="-1">自定义插件生命周期 <a class="header-anchor" href="#自定义插件生命周期" aria-label="Permalink to &quot;自定义插件生命周期&quot;">​</a></h3><h3 id="beforecreate" tabindex="-1">beforeCreate <a class="header-anchor" href="#beforecreate" aria-label="Permalink to &quot;beforeCreate&quot;">​</a></h3><p>插件 new 的时候，但是还未执行其余一系列操作的时候执行</p><h3 id="render" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#render" target="_blank" rel="noreferrer">#</a>render <a class="header-anchor" href="#render" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#render)render&quot;">​</a></h3><p>继承自 BasePlugin 不执行该流程 UI 插件渲染，非 UI 插件不执行，该接口支持返回一个结构的字符串，也支持返回一个 dom 对象，最终会挂载在 root 或者指定的其他 dom 节点上</p><h3 id="aftercreate" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#aftercreate" target="_blank" rel="noreferrer">#</a>afterCreate <a class="header-anchor" href="#aftercreate" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#aftercreate)afterCreate&quot;">​</a></h3><p>插件实例创建之后回调，此时可以获取所有内置对象，例如 this.player, 如果是 UI 插件则可以获取到当前插件的根节点，例如 this.el</p><h3 id="onpluginsready" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#onpluginsready" target="_blank" rel="noreferrer">#</a>onPluginsReady <a class="header-anchor" href="#onpluginsready" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#onpluginsready)onPluginsReady&quot;">​</a></h3><p>播放器初始化带有的的所有插件创建完成之后执行，在该流程可以获取到所有播放器上注册的插件实例，可进行插件实例之间相互依赖交互</p><h3 id="destory" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#destory" target="_blank" rel="noreferrer">#</a>destory <a class="header-anchor" href="#destory" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#destory)destory&quot;">​</a></h3><p>播放器 destroy 的之后回调，插件销毁之前执行，播放器销毁的时候，会先依次执行各个插件的 destory</p><h3 id="beforeplayerinit" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#beforeplayerinit" target="_blank" rel="noreferrer">#</a>beforePlayerInit <a class="header-anchor" href="#beforeplayerinit" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#beforeplayerinit)beforePlayerInit&quot;">​</a></h3><p>播放器执行 start 初始化播放源之前</p><h3 id="afterplayerinit" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#afterplayerinit" target="_blank" rel="noreferrer">#</a>afterPlayerInit <a class="header-anchor" href="#afterplayerinit" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#afterplayerinit)afterPlayerInit&quot;">​</a></h3><p>播放器执行 start 逻辑，播放源被初始化之后</p><h2 id="内置对象" tabindex="-1">内置对象 <a class="header-anchor" href="#内置对象" aria-label="Permalink to &quot;内置对象&quot;">​</a></h2><h3 id="player-只读" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#player-%E5%8F%AA%E8%AF%BB" target="_blank" rel="noreferrer">#</a>player[只读] <a class="header-anchor" href="#player-只读" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#player-只读)player[只读]&quot;">​</a></h3><p>播放器实例， 在插件内部可以直接通过 this.player 调用播放器任何 API</p><h3 id="playerconfig-只读" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#playerconfig-%E5%8F%AA%E8%AF%BB" target="_blank" rel="noreferrer">#</a>playerConfig[只读] <a class="header-anchor" href="#playerconfig-只读" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#playerconfig-只读)playerConfig[只读]&quot;">​</a></h3><p>播放器初始配置, 在插件内部可以直接通过 this. playerConfig 获取</p><h3 id="pluginname-只读" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#pluginname-%E5%8F%AA%E8%AF%BB" target="_blank" rel="noreferrer">#</a>pluginName[只读] <a class="header-anchor" href="#pluginname-只读" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#pluginname-只读)pluginName[只读]&quot;">​</a></h3><p>插件名称唯一 key, 可通过 this.name 调用，通过注册插件的时候指定 name 或者插件静态属性获取</p><h3 id="root-只读" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#root-%E5%8F%AA%E8%AF%BB" target="_blank" rel="noreferrer">#</a>root[只读] <a class="header-anchor" href="#root-只读" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#root-只读)root[只读]&quot;">​</a></h3><p>当前插件为 UI 插件，则是该 UI 的根节点 dom, 通过 this.root 获取，否则为 null</p><h2 id="内置-api" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#%E5%86%85%E7%BD%AEapi" target="_blank" rel="noreferrer">#</a>内置 API <a class="header-anchor" href="#内置-api" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#内置api)内置 API&quot;">​</a></h2><h3 id="on-event-callback" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#on-event-callback" target="_blank" rel="noreferrer">#</a>on (event, callback) <a class="header-anchor" href="#on-event-callback" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#on-event-callback)on (event, callback)&quot;">​</a></h3><ul><li>说明： 监听播放器事件, 所有通过该 API 添加的监听事件在 destroy 的时候会默认 off, 不需要再单独调用 off</li><li>备注：通过该 API 监听，播放器销毁的时候会默认接触监听，不需要额外在 destroy 的时候显示的解除事件监听</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">PLAY</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;play&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 多个事件同时监听处理</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">ENDED</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">PAUSE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">], () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;ended or pause&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="once-event-callback" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#once-event-callback" target="_blank" rel="noreferrer">#</a>once (event, callback) <a class="header-anchor" href="#once-event-callback" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#once-event-callback)once (event, callback)&quot;">​</a></h3><ul><li>说明： 监听播放器事件，只监听一次</li><li>备注：通过该 API 监听，播放器销毁的时候会默认接触监听，不需要额外在 destroy 的时候显示的解除事件监听</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">once</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">PLAY</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;play&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="off-event-callback" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#off-event-callback" target="_blank" rel="noreferrer">#</a>off (event, callback) <a class="header-anchor" href="#off-event-callback" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#off-event-callback)off (event, callback)&quot;">​</a></h3><ul><li>说明： 解除播放器事件监听</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">PLAY</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;play&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 多个事件同时监听处理</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">ENDED</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Events</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">PAUSE</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">], () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;ended or pause&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="offall" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#offall" target="_blank" rel="noreferrer">#</a>offAll () <a class="header-anchor" href="#offall" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#offall)offAll ()&quot;">​</a></h3><ul><li>说明： 解除当前插件对播放器的所有事件监听</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">offAll</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="emit-event" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#emit-event" target="_blank" rel="noreferrer">#</a>emit (event) <a class="header-anchor" href="#emit-event" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#emit-event)emit (event)&quot;">​</a></h3><ul><li>说明： 触发自定义事件</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">emit</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;customEvent&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;customEvent&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="plugins" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#plugins" target="_blank" rel="noreferrer">#</a>plugins() <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#plugins)plugins()&quot;">​</a></h3><ul><li>说明： 返回当前插件的所有子插件实例，通过调用 this.registerPlugin 注册的所有子插件</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> childPlugins</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">plugins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="getplugin-key" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#getplugin-key" target="_blank" rel="noreferrer">#</a>getPlugin(key) <a class="header-anchor" href="#getplugin-key" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#getplugin-key)getPlugin(key)&quot;">​</a></h3><ul><li>说明： 根据插件 key 值，获取插件实例</li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> pc</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">getPlugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;pc&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="registerplugin-plugin-options-name" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#registerplugin-plugin-options-name" target="_blank" rel="noreferrer">#</a>registerPlugin (Plugin, options, name) <a class="header-anchor" href="#registerplugin-plugin-options-name" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#registerplugin-plugin-options-name)registerPlugin (Plugin, options, name)&quot;">​</a></h3><ul><li>说明： 在当前插件中注册自插件，如果当前插件为 UI 插件 <ul><li>options 或者 options.root 为空，插件 dom 结构默认挂载在当前插件根节点上；如果指定了</li><li>options.root 为 dom 结构，插件 dom 结构默认挂载在 root 下</li><li>name 不为空，插件注册之后实例以 name 为 key 值存储</li><li>name 为空，插件注册之后实例以 Plugin.pluginName 返回的值为 key</li></ul></li><li>举例：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// get pluginName() 返回值为 customplugin</span></span>
<span class="line"><span style="--shiki-light:#859900;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;"> CustomPlugin</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;"> &#39;./customplugin&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">/**</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> * 注册之后可以根据this.getPlugin(&#39;customplugin&#39;)得到插件实例</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> * 子插件dom挂载在当前插件根节点下</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> */</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> child1</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">CustomPlugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">/**</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> * 注册之后可以根据this.getPlugin(&#39;csplugin&#39;)得到插件实例</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> * 子插件dom挂载在当前插件dom中classNamew为childdiv的dom下</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;"> */</span></span>
<span class="line"><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">const</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> child</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">CustomPlugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">  //以className 为childdiv的div作为父节点</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  root: </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;.childdiv&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">  //插件配置信息</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  config: {</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">    disable: </span><span style="--shiki-light:#B58900;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;csplugin&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="show" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#show" target="_blank" rel="noreferrer">#</a>show <a class="header-anchor" href="#show" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#show)show&quot;">​</a></h3><ul><li>说明： 显示当前插件</li><li>示例:</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 默认使用block</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">plugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 指定show参数</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">plugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;flex&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="hide" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#hide" target="_blank" rel="noreferrer">#</a>hide <a class="header-anchor" href="#hide" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#hide)hide&quot;">​</a></h3><ul><li>说明: 隐藏当前插件</li></ul><h3 id="find-selector" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#find-selector" target="_blank" rel="noreferrer">#</a>find (selector) <a class="header-anchor" href="#find-selector" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#find-selector)find (selector)&quot;">​</a></h3><ul><li>说明: 在当前插件根节点下查找，底层使用的 querySelector</li><li>示例:</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 获取当前UI插件root下类名为.icon的第一个dom</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">icon</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;.icon&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 获取当前UI插件root下tag为li的所有dom</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">lis</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;li&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="bind-selector-event-handler" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#bind-selector-event-handler" target="_blank" rel="noreferrer">#</a>bind (selector, event, handler) <a class="header-anchor" href="#bind-selector-event-handler" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#bind-selector-event-handler)bind (selector, event, handler)&quot;">​</a></h3><ul><li>说明: 对符合选择器的 dom 添加 event 事件代理，对应的解除事件代理的 UI 为 unbind,可以在 destory 的时候调用</li><li>示例:</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 对当前UI插件根节点下的li a进行事件代理</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">bind</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;li a&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">clickHandler</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">unbind</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;li a&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">clickHandler</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 对当前插件根节点添加事件监听，目标元素为this.el</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">bind</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">clickHandler</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">unbind</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">clickHandler</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 同时对同一选择器的多个事件监听相同的事件代理</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">bind</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;li a&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;touched&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">clickHandler</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">unbind</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;li a&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;touched&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">clickHandler</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="unbind-selector-event-handler" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#unbind-selector-event-handler" target="_blank" rel="noreferrer">#</a>unbind (selector, event, handler) <a class="header-anchor" href="#unbind-selector-event-handler" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#unbind-selector-event-handler)unbind (selector, event, handler)&quot;">​</a></h3><ul><li>说明: 对符合选择器的 dom 解除 event 事件代理，可以在 destory 的时候调用</li><li>示例: 参考 bind 说明</li></ul><h3 id="setstyle" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#setstyle" target="_blank" rel="noreferrer">#</a>setStyle; <a class="header-anchor" href="#setstyle" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#setstyle)setStyle;&quot;">​</a></h3><ul><li>@param { string | {[propName: string]: any} } name</li><li>@param { any? } value</li><li>说明: 对当前 UI 插件的根节点设置样式</li><li>示例:</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 设置单个样式</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">setStyle</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;height&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;40px&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 设置多个样式单位</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">setStyle</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;40px&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;40px&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="setattr-name-value" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#setattr-name-value" target="_blank" rel="noreferrer">#</a>setAttr (name, value) <a class="header-anchor" href="#setattr-name-value" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#setattr-name-value)setAttr (name, value)&quot;">​</a></h3><ul><li>说明: 对当前 UI 插件的根节点设置属性</li><li>示例:</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 设置单个样式</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">setAttr</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;data-url&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;https://ixigua.com&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 设置多个样式单位</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">setAttr</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">  &#39;data-id&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D33682;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">  &#39;data-name&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="sethtml-htmlstr-callback" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#sethtml-htmlstr-callback" target="_blank" rel="noreferrer">#</a>setHtml (htmlStr, callback) <a class="header-anchor" href="#sethtml-htmlstr-callback" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#sethtml-htmlstr-callback)setHtml (htmlStr, callback)&quot;">​</a></h3><ul><li>说明: 对当前根节点重置 html 结构</li><li>示例:</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">// 设置单个样式</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">setHtml</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">\`&lt;div class=&quot;icon&quot;&gt;重置icon&lt;/div&gt;\`</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#586E75;--shiki-light-font-weight:bold;--shiki-dark:#F97583;--shiki-dark-font-weight:inherit;">=&gt;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">  console</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;dom重置完成&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="静态枚举对象列表" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#%E9%9D%99%E6%80%81%E6%9E%9A%E4%B8%BE%E5%AF%B9%E8%B1%A1%E5%88%97%E8%A1%A8" target="_blank" rel="noreferrer">#</a>静态枚举对象列表 <a class="header-anchor" href="#静态枚举对象列表" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#静态枚举对象列表)静态枚举对象列表&quot;">​</a></h2><h3 id="plugin-positions" tabindex="-1"><a href="https://v3.h5player.bytedance.com/plugins/custom_plugin.html#plugin-positions" target="_blank" rel="noreferrer">#</a>Plugin.POSITIONS <a class="header-anchor" href="#plugin-positions" aria-label="Permalink to &quot;[#](https://v3.h5player.bytedance.com/plugins/custom_plugin.html#plugin-positions)Plugin.POSITIONS&quot;">​</a></h3><p>插件在节点中挂载的位置 position 的枚举值，用于指定 UI 插件的 dom 挂载位置，具体值列表如下</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes solarized-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#268BD2;--shiki-dark:#E1E4E8;">Plugin</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#268BD2;--shiki-dark:#79B8FF;">POSITIONS</span><span style="--shiki-light:#859900;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  ROOT: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;root&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在根节点上</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  ROOT_LEFT: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;rootLeft&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在播放器容器的左侧边栏</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  ROOT_RIGHT: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;rootRight&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在播放器容器的右侧边栏</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  ROOT_TOP: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;rootTop&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在播放器容器的顶部边栏</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  CONTROLS_LEFT: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;controlsLeft&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在播放器控制栏的左侧</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  CONTROLS_RIGHT: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;controlsRight&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在播放器控制栏的右侧</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">  CONTROLS_CENTER: </span><span style="--shiki-light:#2AA198;--shiki-dark:#9ECBFF;">&#39;controlsCenter&#39;</span><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#93A1A1;--shiki-light-font-style:italic;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;">//挂载在播放器控制栏的中间控制条位置</span></span>
<span class="line"><span style="--shiki-light:#657B83;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,86)]))}const g=i(t,[["render",e]]);export{o as __pageData,g as default};
